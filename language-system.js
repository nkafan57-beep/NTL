
const { SlashCommandBuilder, MessageFlags } = require('discord.js');

console.log('โ ุชู ุชุญููู ูุธุงู ุชุจุฏูู ุงููุบุฉ ุจูุฌุงุญ!');

// ูุงุนุฏุฉ ุจูุงูุงุช ุงููุบุงุช ููุณูุฑูุฑุงุช
const serverLanguages = new Map(); // guildId -> language ('ar' | 'en')

// ุงููุตูุต ุงููุชุฑุฌูุฉ
const translations = {
    ar: {
        // ุฃูุงูุฑ ุนุงูุฉ
        roomCreated: 'ุชู ุฅูุดุงุก',
        voiceRoom: 'ุฑูู ุงูุตูุช',
        textRoom: 'ุฑูู ุงูุดุงุช',
        successfully: 'ุจูุฌุงุญ!',
        locked: '(ูููู)',
        open: '(ููุชูุญ)',
        roleCreated: 'ุชู ุฅูุดุงุก ุงูุฑุชุจุฉ',
        roleDeleted: 'ุชู ุญุฐู ุงูุฑุชุจุฉ',
        roleGiven: 'ุชู ุฅุนุทุงุก ุงูุฑุชุจุฉ',
        roleRemoved: 'ุชู ุฅุฒุงูุฉ ุงูุฑุชุจุฉ',
        messagesDeleted: 'ุชู ุญุฐู {count} ุฑุณุงูุฉ ุจูุฌุงุญ!',
        nicknameChanged: 'ุชู ุชุบููุฑ ุงุณู {user} ุฅูู "{nickname}" ุจูุฌุงุญ!',
        messageSent: 'ุชู ุฅุฑุณุงู ุงูุฑุณุงูุฉ ุจูุฌุงุญ!',
        messageFailed: 'ูุดู ูู ุฅุฑุณุงู ุงูุฑุณุงูุฉ. ูุฏ ูููู ุงููุณุชุฎุฏู ูุฏ ุฃุบูู ุงูุฑุณุงุฆู ุงูุฎุงุตุฉ.',
        channelDeleted: 'ุชู ุญุฐู ุงูุฑูู "{name}" ุจูุฌุงุญ!',
        userBanned: 'ุชู ููุน {user} ูู ุงูุณูุฑูุฑ.\nุงูุณุจุจ: {reason}',
        userKicked: 'ุชู ุทุฑุฏ {user} ูู ุงูุณูุฑูุฑ.\nุงูุณุจุจ: {reason}',
        
        // ุฑุณุงุฆู ุงูุฃุฎุทุงุก
        noPermission: 'โ ููุณ ูุฏูู ุตูุงุญูุฉ ูุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ!',
        roleAlreadyExists: 'โ ูุฐุง ุงูุนุถู ูููู ูุฐู ุงูุฑุชุจุฉ ุจุงููุนู!',
        roleNotFound: 'โ ูุฐุง ุงูุนุถู ูุง ูููู ูุฐู ุงูุฑุชุจุฉ!',
        cannotModifyOwner: 'โ ูุง ูููููู ุชุบููุฑ ุงุณู ุตุงุญุจ ุงูุณูุฑูุฑ!',
        cannotModifyHigherRole: 'โ ูุง ููููู ุชุบููุฑ ุงุณู ูุฐุง ุงูุนุถู ูุฃู ุฑุชุจุชู ุฃุนูู ูู ุฑุชุจุฉ ุงูุจูุช ุฃู ูุณุงููุฉ ููุง!',
        insufficientPermissions: 'โ ููุณ ูุฏู ุตูุงุญูุฉ ูุงููุฉ ูุชุบููุฑ ุงุณู ูุฐุง ุงูุนุถู!',
        dmsClosed: 'ูุดู ูู ุฅุฑุณุงู ุงูุฑุณุงูุฉ. ูุฏ ูููู ุงููุณุชุฎุฏู ูุฏ ุฃุบูู ุงูุฑุณุงุฆู ุงูุฎุงุตุฉ.',
        
        // ุฑุณุงุฆู ุงููุฌุงุญ
        roleGivenSuccess: 'โ ุชู ุฅุนุทุงุก ุงูุฑุชุจุฉ ุจูุฌุงุญ',
        roleRemovedSuccess: '๐๏ธ ุชู ุฅุฒุงูุฉ ุงูุฑุชุจุฉ ุจูุฌุงุญ',
        roleGivenTo: 'ุชู ุฅุนุทุงุก ุงูุฑุชุจุฉ {role} ููุนุถู {user}',
        roleRemovedFrom: 'ุชู ุฅุฒุงูุฉ ุงูุฑุชุจุฉ {role} ูู ุงูุนุถู {user}',
        
        // ุนูุงููู ุงูุญููู
        member: '๐ค ุงูุนุถู',
        role: '๐ท๏ธ ุงูุฑุชุจุฉ',
        by: '๐ ุจูุงุณุทุฉ',
        reason: 'ุงูุณุจุจ',
        
        // ุฑุณุงุฆู ุฅุฑุณุงู ุงูุฑุณุงุฆู ุงูุฌูุงุนู
        sendingMessages: 'ุฌุงุฑู ุฅุฑุณุงู ุงูุฑุณุงูุฉ ุฅูู {count} ุดุฎุต...',
        sendingStats: 'โ ุชู ุฅุฑุณุงู ุงูุฑุณุงูุฉ ุจูุฌุงุญ!\n๐ **ุฅุญุตุงุฆูุงุช ุงูุฅุฑุณุงู:**',
        requested: 'โข ุงูุนุฏุฏ ุงููุทููุจ: {count}',
        available: 'โข ุงูุนุฏุฏ ุงููุชููุฑ: {count}',
        sentTo: 'โข ุชู ุงูุฅุฑุณุงู ูู: {count} ุดุฎุต',
        failedTo: 'โข ูุดู ุงูุฅุฑุณุงู ูู: {count} ุดุฎุต',
        
        // ูุนูููุงุช ุงูุฃุนุถุงุก
        memberInfo: 'ูุนูููุงุช ุงูุนุถู: {username}',
        name: 'ุงูุงุณู',
        tag: 'ุงูุชุงุฌ',
        id: 'ุงูุขูุฏู',
        joinedDiscord: 'ุงูุถู ููุฏูุณููุฑุฏ',
        joinedServer: 'ุงูุถู ููุณูุฑูุฑ',
        roles: 'ุงูุฑุชุจ',
        noRoles: 'ูุง ููุฌุฏ',
        notSpecified: 'ุบูุฑ ูุญุฏุฏ',
        
        // ุฒุฎุฑูุฉ ุงููุตูุต
        textDecoration: '**ุฒุฎุฑูุฉ ุงููุต: {text}**',
        
        // ุฑุณุงุฆู ุงูุจุงู ูุงูููู
        banSuccess: 'ุชู ููุน {user} ูู ุงูุณูุฑูุฑ.\nุงูุณุจุจ: {reason}',
        kickSuccess: 'ุชู ุทุฑุฏ {user} ูู ุงูุณูุฑูุฑ.\nุงูุณุจุจ: {reason}',
        banFailed: 'ูุดู ูู ููุน ุงูุนุถู. ุชุฃูุฏ ูู ุฃู ุงูุจูุช ูููู ุตูุงุญูุงุช ูุงููุฉ.',
        kickFailed: 'ูุดู ูู ุทุฑุฏ ุงูุนุถู. ุชุฃูุฏ ูู ุฃู ุงูุจูุช ูููู ุตูุงุญูุงุช ูุงููุฉ.',
        noReasonProvided: 'ูู ูุชู ุชุญุฏูุฏ ุณุจุจ',
        
        // ุดุฑุญ ุงูุฃูุงูุฑ
        commandExplanations: {
            'ูุนุจุฉ-ุฑูููุช': 'Roulette - ูุนุจุฉ ุญุธ ุฌูุงุนูุฉ ุญูุซ ูุทุฑุฏ ุงููุงุนุจูู ุจุนุถูู ุงูุจุนุถ ุญุชู ูุจูู ูุงุฆุฒ ูุงุญุฏ',
            'ูุฑุฏ': 'Dice - ูุนุจุฉ ูุฑุฏ ุฌูุงุนูุฉ ุจูุฑู ูุชูุงูุณุฉ',
            'ููุฏุฉ': 'Points - ุนุฑุถ ููุฏุชู ุงูุญุงููุฉ ูู ุงููุธุงู',
            'ุชุญููู': 'Transfer - ุชุญููู ููุฏุฉ ูุดุฎุต ุขุฎุฑ ูุน ุฑุณูู',
            'ุงุนุทุงุก': 'Give - ุฅุนุทุงุก ููุฏุฉ (ุฎุงุต ุจุตุงุญุจ ุงูุจูุช)',
            'ููุทุฉ': 'User Points - ุนุฑุถ ููุฏุฉ ุดุฎุต ุขุฎุฑ',
            'ููููุฉ': 'Daily - ุงุณุชูุงู ุงูุฌุงุฆุฒุฉ ุงูููููุฉ',
            'ุงุณุจูุนูุฉ': 'Weekly - ุงุณุชูุงู ุงูุฌุงุฆุฒุฉ ุงูุฃุณุจูุนูุฉ', 
            'ุดูุฑูุฉ': 'Monthly - ุงุณุชูุงู ุงูุฌุงุฆุฒุฉ ุงูุดูุฑูุฉ',
            'ุญุณุงุจ-ุถุฑูุจุฉ': 'Tax Calculator - ุญุณุงุจ ุงูุถุฑูุจุฉ ุงููุทููุจุฉ ููุชุญููู',
            'ุงูุดุงุก': 'Create - ุฅูุดุงุก ุฑูู ุฌุฏูุฏ (ูุต ุฃู ุตูุช)',
            'ุฑุชุจุฉ': 'Role - ุฅูุดุงุก ุฑุชุจุฉ ุฌุฏูุฏุฉ',
            'ุญุฐู-ุฑุชุจุฉ': 'Delete Role - ุญุฐู ุฑุชุจุฉ ููุฌูุฏุฉ',
            'ุงุนุทุงุก-ุฑุชุจุฉ': 'Give Role - ุฅุนุทุงุก ุฑุชุจุฉ ูุนุถู',
            'ุงุฒุงูุฉ-ุฑุชุจุฉ': 'Remove Role - ุฅุฒุงูุฉ ุฑุชุจุฉ ูู ุนุถู',
            'ูุณุญ': 'Clear - ุญุฐู ุนุฏุฏ ูู ุงูุฑุณุงุฆู',
            'ุงุณู-ูุณุชุนุงุฑ': 'Nickname - ุชุบููุฑ ุงุณู ูุณุชุนุงุฑ ูุนุถู',
            'ุงุฑุณู': 'Send DM - ุฅุฑุณุงู ุฑุณุงูุฉ ุฎุงุตุฉ ูุดุฎุต',
            'ุงุฑุณุงู': 'Mass DM - ุฅุฑุณุงู ุฑุณุงูุฉ ูุนุฏุฉ ุฃุดุฎุงุต',
            'ุฒุฎุฑูุฉ': 'Decoration - ุฒุฎุฑูุฉ ุงููุตูุต ุจุฃุดูุงู ูุฎุชููุฉ',
            'ุญุฐู_ุฑูู': 'Delete Room - ุญุฐู ุฑูู ูู ุงูุณูุฑูุฑ',
            'ูุนูููุงุช_ุงูุนุถู': 'Member Info - ุนุฑุถ ูุนูููุงุช ุนุถู',
            'ููุน': 'Ban - ููุน ุนุถู ูู ุงูุณูุฑูุฑ',
            'ุจุงูุฏ': 'Kick - ุทุฑุฏ ุนุถู ูู ุงูุณูุฑูุฑ',
            'language': 'Language - ุชุบููุฑ ูุบุฉ ุงูุจูุช',
            'current-language': 'Current Language - ุนุฑุถ ุงููุบุฉ ุงูุญุงููุฉ'
        },
        
        // ูุธุงู ุงูููุงุท
        currentPoints: '๐ฐ ููุฏุชู ุงูุญุงููุฉ',
        hasPoints: 'ูุฏูู **{points}** ููุฏุฉ',
        userPoints: '๐ฐ ููุฏุฉ {username}',
        dailyReward: '๐ ุฌุงุฆุฒุฉ ููููุฉ!',
        weeklyReward: '๐ ุฌุงุฆุฒุฉ ุฃุณุจูุนูุฉ!',
        monthlyReward: '๐ ุฌุงุฆุฒุฉ ุดูุฑูุฉ!',
        alreadyClaimedDaily: 'โ ููุฏ ุงุณุชููุช ุงูุฌุงุฆุฒุฉ ุงูููููุฉ ุจุงููุนู! ุนุฏ ุบุฏุงู.',
        alreadyClaimedWeekly: 'โ ููุฏ ุงุณุชููุช ุงูุฌุงุฆุฒุฉ ุงูุฃุณุจูุนูุฉ ุจุงููุนู! ุนุฏ ุงูุฃุณุจูุน ุงููุงุฏู.',
        alreadyClaimedMonthly: 'โ ููุฏ ุงุณุชููุช ุงูุฌุงุฆุฒุฉ ุงูุดูุฑูุฉ ุจุงููุนู! ุนุฏ ุงูุดูุฑ ุงููุงุฏู.',
        transferSuccess: 'โ ุชู ุงูุชุญููู ุจูุฌุงุญ',
        transferFailed: 'โ ููุณ ูุฏูู ููุฏุฉ ูุงููุฉ!',
        
        // ูุธุงู ุงูุฃูุนุงุจ
        gameActive: 'โ ููุงู ูุนุจุฉ ูุดุทุฉ ุจุงููุนู ูู ูุฐู ุงูููุงุฉ!',
        noActiveGame: 'โ ูุง ุชูุฌุฏ ูุนุจุฉ ูุดุทุฉ ูู ูุฐู ุงูููุงุฉ!',
        gameEnded: '๐ ุชู ุฅููุงุก ุงููุนุจุฉ',
        joinGame: 'ุฏุฎูู ุงููุนุจุฉ',
        leaveGame: 'ุฎุฑูุฌ ูู ุงููุนุจุฉ',
        
        // ุงูุฃุฎุทุงุก
        error: 'โ ุฎุทุฃ',
        unknownCommand: 'ุงูุฑ ุบูุฑ ูุนุฑูู!',
        commandError: 'ุญุฏุซ ุฎุทุฃ ุงุซูุงุก ุชูููุฐ ุงูุงูุฑ. ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุงุฎุฑู.',
        
        // ูุธุงู ุงููุบุฉ
        languageChanged: 'โ ุชู ุชุบููุฑ ุงููุบุฉ ุฅูู ุงูุนุฑุจูุฉ',
        currentLanguage: 'ุงููุบุฉ ุงูุญุงููุฉ',
        arabic: 'ุงูุนุฑุจูุฉ',
        english: 'ุงูุฅูุฌููุฒูุฉ'
    },
    en: {
        // General commands
        roomCreated: 'Created',
        voiceRoom: 'voice room',
        textRoom: 'text room',
        successfully: 'successfully!',
        locked: '(locked)',
        open: '(open)',
        roleCreated: 'Role created',
        roleDeleted: 'Role deleted',
        roleGiven: 'Role given',
        roleRemoved: 'Role removed',
        messagesDeleted: 'Successfully deleted {count} messages!',
        nicknameChanged: 'Successfully changed {user}\'s nickname to "{nickname}"!',
        messageSent: 'Message sent successfully!',
        messageFailed: 'Failed to send message. The user may have disabled DMs.',
        channelDeleted: 'Successfully deleted channel "{name}"!',
        userBanned: 'Banned {user} from the server.\nReason: {reason}',
        userKicked: 'Kicked {user} from the server.\nReason: {reason}',
        
        // Error messages
        noPermission: 'โ You don\'t have permission to use this command!',
        roleAlreadyExists: 'โ This member already has this role!',
        roleNotFound: 'โ This member doesn\'t have this role!',
        cannotModifyOwner: 'โ I cannot change the server owner\'s nickname!',
        cannotModifyHigherRole: 'โ You cannot change this member\'s nickname because their role is higher than or equal to the bot\'s role!',
        insufficientPermissions: 'โ I don\'t have sufficient permissions to change this member\'s nickname!',
        dmsClosed: 'Failed to send message. The user may have disabled DMs.',
        
        // Success messages
        roleGivenSuccess: 'โ Role Given Successfully',
        roleRemovedSuccess: '๐๏ธ Role Removed Successfully',
        roleGivenTo: 'Given role {role} to member {user}',
        roleRemovedFrom: 'Removed role {role} from member {user}',
        
        // Field titles
        member: '๐ค Member',
        role: '๐ท๏ธ Role',
        by: '๐ By',
        reason: 'Reason',
        
        // Mass messaging
        sendingMessages: 'Sending message to {count} people...',
        sendingStats: 'โ Message sent successfully!\n๐ **Sending Statistics:**',
        requested: 'โข Requested count: {count}',
        available: 'โข Available count: {count}',
        sentTo: 'โข Sent to: {count} people',
        failedTo: 'โข Failed to send to: {count} people',
        
        // Member information
        memberInfo: 'Member Information: {username}',
        name: 'Name',
        tag: 'Tag',
        id: 'ID',
        joinedDiscord: 'Joined Discord',
        joinedServer: 'Joined Server',
        roles: 'Roles',
        noRoles: 'None',
        notSpecified: 'Not specified',
        
        // Text decoration
        textDecoration: '**Text Decoration: {text}**',
        
        // Ban and kick messages
        banSuccess: 'Banned {user} from the server.\nReason: {reason}',
        kickSuccess: 'Kicked {user} from the server.\nReason: {reason}',
        banFailed: 'Failed to ban member. Make sure the bot has sufficient permissions.',
        kickFailed: 'Failed to kick member. Make sure the bot has sufficient permissions.',
        noReasonProvided: 'No reason provided',
        
        // Command explanations
        commandExplanations: {
            'ูุนุจุฉ-ุฑูููุช': 'Roulette - Group luck game where players eliminate each other until one winner remains',
            'ูุฑุฏ': 'Dice - Group dice game with competing teams',
            'ููุฏุฉ': 'Points - Display your current points in the system',
            'ุชุญููู': 'Transfer - Transfer points to another person with fees',
            'ุงุนุทุงุก': 'Give - Give points (bot owner only)',
            'ููุทุฉ': 'User Points - Display someone else\'s points',
            'ููููุฉ': 'Daily - Claim daily reward',
            'ุงุณุจูุนูุฉ': 'Weekly - Claim weekly reward',
            'ุดูุฑูุฉ': 'Monthly - Claim monthly reward',
            'ุญุณุงุจ-ุถุฑูุจุฉ': 'Tax Calculator - Calculate transfer tax required',
            'ุงูุดุงุก': 'Create - Create new room (text or voice)',
            'ุฑุชุจุฉ': 'Role - Create new role',
            'ุญุฐู-ุฑุชุจุฉ': 'Delete Role - Delete existing role',
            'ุงุนุทุงุก-ุฑุชุจุฉ': 'Give Role - Give role to member',
            'ุงุฒุงูุฉ-ุฑุชุจุฉ': 'Remove Role - Remove role from member',
            'ูุณุญ': 'Clear - Delete number of messages',
            'ุงุณู-ูุณุชุนุงุฑ': 'Nickname - Change member nickname',
            'ุงุฑุณู': 'Send DM - Send private message to person',
            'ุงุฑุณุงู': 'Mass DM - Send message to multiple people',
            'ุฒุฎุฑูุฉ': 'Decoration - Decorate text with different styles',
            'ุญุฐู_ุฑูู': 'Delete Room - Delete room from server',
            'ูุนูููุงุช_ุงูุนุถู': 'Member Info - Display member information',
            'ููุน': 'Ban - Ban member from server',
            'ุจุงูุฏ': 'Kick - Kick member from server',
            'language': 'Language - Change bot language',
            'current-language': 'Current Language - Show current language'
        },
        
        // Points system
        currentPoints: '๐ฐ Your Current Points',
        hasPoints: 'You have **{points}** points',
        userPoints: '๐ฐ {username}\'s Points',
        dailyReward: '๐ Daily Reward!',
        weeklyReward: '๐ Weekly Reward!',
        monthlyReward: '๐ Monthly Reward!',
        alreadyClaimedDaily: 'โ You already claimed your daily reward! Come back tomorrow.',
        alreadyClaimedWeekly: 'โ You already claimed your weekly reward! Come back next week.',
        alreadyClaimedMonthly: 'โ You already claimed your monthly reward! Come back next month.',
        transferSuccess: 'โ Transfer Successful',
        transferFailed: 'โ You don\'t have enough points!',
        
        // Games system
        gameActive: 'โ There\'s already an active game in this channel!',
        noActiveGame: 'โ No active game in this channel!',
        gameEnded: '๐ Game Ended',
        joinGame: 'Join Game',
        leaveGame: 'Leave Game',
        
        // Errors
        error: 'โ Error',
        unknownCommand: 'Unknown command!',
        commandError: 'An error occurred while executing the command. Please try again.',
        
        // Language system
        languageChanged: 'โ Language changed to English',
        currentLanguage: 'Current Language',
        arabic: 'Arabic',
        english: 'English'
    }
};

// ุฃูุงูุฑ ุชุจุฏูู ุงููุบุฉ
const languageCommands = [
    new SlashCommandBuilder()
        .setName('language')
        .setDescription('Change bot language / ุชุบููุฑ ูุบุฉ ุงูุจูุช')
        .addStringOption(option =>
            option.setName('lang')
                .setDescription('Choose language / ุงุฎุชุฑ ุงููุบุฉ')
                .setRequired(true)
                .addChoices(
                    { name: 'ุงูุนุฑุจูุฉ - Arabic', value: 'ar' },
                    { name: 'English - ุงูุฅูุฌููุฒูุฉ', value: 'en' }
                )),

    new SlashCommandBuilder()
        .setName('current-language')
        .setDescription('Show current language / ุนุฑุถ ุงููุบุฉ ุงูุญุงููุฉ'),

    new SlashCommandBuilder()
        .setName('ุดุฑุญ-ุงูุงูุงูุฑ')
        .setDescription('ุดุฑุญ ูุนุงูู ุงูุฃูุงูุฑ / Explain commands meanings')
        .addStringOption(option =>
            option.setName('ุงูุงูุฑ')
                .setDescription('ุงูุฃูุฑ ุงููุฑุงุฏ ุดุฑุญู (ุงุฎุชูุงุฑู) / Command to explain (optional)')
                .setRequired(false))
];

// ุฏุงูุฉ ุงูุญุตูู ุนูู ูุบุฉ ุงูุณูุฑูุฑ
function getServerLanguage(guildId) {
    return serverLanguages.get(guildId) || 'ar'; // ุงูุนุฑุจูุฉ ุงูุชุฑุงุถูุฉ
}

// ุฏุงูุฉ ุชุญุฏูุฏ ูุบุฉ ุงูุณูุฑูุฑ
function setServerLanguage(guildId, language) {
    serverLanguages.set(guildId, language);
}

// ุฏุงูุฉ ุงูุชุฑุฌูุฉ
function translate(guildId, key, replacements = {}) {
    const language = getServerLanguage(guildId);
    let text = translations[language][key] || translations['ar'][key] || key;
    
    // ุงุณุชุจุฏุงู ุงููุชุบูุฑุงุช ูู ุงููุต
    for (const [placeholder, value] of Object.entries(replacements)) {
        text = text.replace(new RegExp(`{${placeholder}}`, 'g'), value);
    }
    
    return text;
}

// ุฏุงูุฉ ูุนุงูุฌุฉ ุฃูุงูุฑ ุงููุบุฉ
async function handleLanguageCommand(interaction) {
    const { commandName, guildId } = interaction;

    try {
        switch (commandName) {
            case 'language':
                const newLanguage = interaction.options.getString('lang');
                setServerLanguage(guildId, newLanguage);

                const languageEmbed = {
                    color: newLanguage === 'ar' ? 0x00ff00 : 0x0099ff,
                    title: translate(guildId, 'languageChanged'),
                    description: newLanguage === 'ar' ? 
                        'ุชู ุชุจุฏูู ูุบุฉ ุงูุจูุช ุฅูู ุงูุนุฑุจูุฉ ุจูุฌุงุญ! ๐ธ๐ฆ' : 
                        'Bot language successfully changed to English! ๐บ๐ธ',
                    fields: [
                        { 
                            name: translate(guildId, 'currentLanguage'), 
                            value: translate(guildId, newLanguage === 'ar' ? 'arabic' : 'english'), 
                            inline: true 
                        }
                    ],
                    timestamp: new Date()
                };

                await interaction.reply({ embeds: [languageEmbed] });
                break;

            case 'current-language':
                const currentLang = getServerLanguage(guildId);
                const currentLangEmbed = {
                    color: 0x3498db,
                    title: translate(guildId, 'currentLanguage'),
                    description: currentLang === 'ar' ? 
                        'ุงููุบุฉ ุงูุญุงููุฉ ููุจูุช: **ุงูุนุฑุจูุฉ** ๐ธ๐ฆ' : 
                        'Current bot language: **English** ๐บ๐ธ',
                    fields: [
                        { 
                            name: currentLang === 'ar' ? 'ููููุฉ ุงูุชุบููุฑ' : 'How to Change', 
                            value: currentLang === 'ar' ? 
                                'ุงุณุชุฎุฏู ุงูุฃูุฑ `/language` ูุชุบููุฑ ุงููุบุฉ' : 
                                'Use `/language` command to change language', 
                            inline: false 
                        }
                    ],
                    timestamp: new Date()
                };

                await interaction.reply({ embeds: [currentLangEmbed] });
                break;

            case 'ุดุฑุญ-ุงูุงูุงูุฑ':
                const language = getServerLanguage(guildId);
                const commandToExplain = interaction.options.getString('ุงูุงูุฑ');
                const explanations = translations[language].commandExplanations;

                if (commandToExplain) {
                    // ุดุฑุญ ุฃูุฑ ูุงุญุฏ
                    const explanation = explanations[commandToExplain];
                    if (explanation) {
                        const singleCommandEmbed = {
                            color: 0x9b59b6,
                            title: language === 'ar' ? `๐ ุดุฑุญ ุงูุฃูุฑ: /${commandToExplain}` : `๐ Command Explanation: /${commandToExplain}`,
                            description: `**${explanation}**`,
                            footer: { 
                                text: language === 'ar' ? 
                                    'ุงุณุชุฎุฏู ุงูุฃูุฑ ุจุฏูู ุชุญุฏูุฏ ุฃูุฑ ูุนูู ูุนุฑุถ ุฌููุน ุงูุฃูุงูุฑ' : 
                                    'Use command without specifying to show all commands' 
                            },
                            timestamp: new Date()
                        };
                        await interaction.reply({ embeds: [singleCommandEmbed] });
                    } else {
                        await interaction.reply({ 
                            content: language === 'ar' ? 
                                'โ ุงูุฃูุฑ ุบูุฑ ููุฌูุฏ ุฃู ูุง ููุฌุฏ ุดุฑุญ ูู!' : 
                                'โ Command not found or no explanation available!', 
                            ephemeral: true 
                        });
                    }
                } else {
                    // ุนุฑุถ ุฌููุน ุงูุฃูุงูุฑ
                    const commandFields = [];
                    const commands = Object.keys(explanations);
                    
                    // ุชูุณูู ุงูุฃูุงูุฑ ููุฌููุนุงุช
                    const gameCommands = commands.filter(cmd => cmd.includes('ูุนุจุฉ') || cmd === 'ูุฑุฏ');
                    const pointCommands = commands.filter(cmd => ['ููุฏุฉ', 'ุชุญููู', 'ุงุนุทุงุก', 'ููุทุฉ', 'ููููุฉ', 'ุงุณุจูุนูุฉ', 'ุดูุฑูุฉ', 'ุญุณุงุจ-ุถุฑูุจุฉ'].includes(cmd));
                    const adminCommands = commands.filter(cmd => ['ุงูุดุงุก', 'ุฑุชุจุฉ', 'ุญุฐู-ุฑุชุจุฉ', 'ุงุนุทุงุก-ุฑุชุจุฉ', 'ุงุฒุงูุฉ-ุฑุชุจุฉ', 'ูุณุญ', 'ุงุณู-ูุณุชุนุงุฑ', 'ุญุฐู_ุฑูู', 'ููุน', 'ุจุงูุฏ'].includes(cmd));
                    const utilityCommands = commands.filter(cmd => ['ุงุฑุณู', 'ุงุฑุณุงู', 'ุฒุฎุฑูุฉ', 'ูุนูููุงุช_ุงูุนุถู', 'language', 'current-language'].includes(cmd));

                    if (gameCommands.length > 0) {
                        commandFields.push({
                            name: language === 'ar' ? '๐ฎ ุฃูุงูุฑ ุงูุฃูุนุงุจ' : '๐ฎ Game Commands',
                            value: gameCommands.map(cmd => `โข \`/${cmd}\` - ${explanations[cmd]}`).join('\n'),
                            inline: false
                        });
                    }

                    if (pointCommands.length > 0) {
                        commandFields.push({
                            name: language === 'ar' ? '๐ฐ ุฃูุงูุฑ ุงูููุฏุฉ' : '๐ฐ Point Commands',
                            value: pointCommands.map(cmd => `โข \`/${cmd}\` - ${explanations[cmd]}`).join('\n'),
                            inline: false
                        });
                    }

                    if (adminCommands.length > 0) {
                        commandFields.push({
                            name: language === 'ar' ? 'โ๏ธ ุฃูุงูุฑ ุงูุฅุฏุงุฑุฉ' : 'โ๏ธ Admin Commands',
                            value: adminCommands.map(cmd => `โข \`/${cmd}\` - ${explanations[cmd]}`).join('\n'),
                            inline: false
                        });
                    }

                    if (utilityCommands.length > 0) {
                        commandFields.push({
                            name: language === 'ar' ? '๐ง ุฃูุงูุฑ ุงูุฃุฏูุงุช' : '๐ง Utility Commands',
                            value: utilityCommands.map(cmd => `โข \`/${cmd}\` - ${explanations[cmd]}`).join('\n'),
                            inline: false
                        });
                    }

                    const allCommandsEmbed = {
                        color: 0x9b59b6,
                        title: language === 'ar' ? '๐ ุดุฑุญ ุฌููุน ุงูุฃูุงูุฑ' : '๐ All Commands Explanation',
                        description: language === 'ar' ? 
                            'ูุงุฆูุฉ ุดุงููุฉ ุจุฌููุน ุฃูุงูุฑ ุงูุจูุช ููุนุงูููุง:' : 
                            'Comprehensive list of all bot commands and their meanings:',
                        fields: commandFields,
                        footer: { 
                            text: language === 'ar' ? 
                                'ูุดุฑุญ ุฃูุฑ ูุญุฏุฏุ ุงุณุชุฎุฏู ุงูุฃูุฑ ูุน ุชุญุฏูุฏ ุงุณู ุงูุฃูุฑ' : 
                                'To explain a specific command, use the command with command name specified' 
                        },
                        timestamp: new Date()
                    };

                    await interaction.reply({ embeds: [allCommandsEmbed] });
                }
                break;

            default:
                return false;
        }
        return true;
    } catch (error) {
        console.error('ุฎุทุฃ ูู ูุธุงู ุงููุบุฉ:', error);
        throw error;
    }
}

// ุฏุงูุฉ ุงูุญุตูู ุนูู ูุตูุต ูุชุฑุฌูุฉ ููุฃูุนุงุจ
function getGameTexts(guildId) {
    const language = getServerLanguage(guildId);
    
    if (language === 'en') {
        return {
            rouletteTitle: '๐ฏ Roulette Game',
            rouletteDescription: `@here\n\n๐ฎ **New roulette game started!**\n\n๐ **Rules:**\nโข Minimum: 4 players\nโข Each round a random player chooses someone to eliminate\nโข Last remaining player wins\n\nโฐ **Join time: 40 seconds**`,
            diceTitle: '๐ฒ Group Dice Game',
            diceDescription: `@here\n\n๐ฎ **Group dice game started!**\n\n๐ **Rules:**\nโข Minimum: 4 players\nโข Players divided into two teams\nโข 3 rounds of competition\nโข Each player gets random dice\n\nโฐ **Join time: 30 seconds**`,
            joinGame: 'Join Game',
            leaveGame: 'Leave Game',
            playersCount: 'Players',
            timeLeft: 'Time Left',
            status: 'Status',
            waitingPlayers: 'Waiting for players',
            noPlayersYet: 'No players yet',
            gameCancelled: 'โ Game Cancelled',
            notEnoughPlayers: 'Not enough players joined ({current}/4)\nMinimum required: 4 players',
            gameStarted: '๐ฒ **Dice game started!**',
            round: 'Round',
            team1: '๐ด **Team 1:**',
            team2: '๐ต **Team 2:**',
            starting: '๐ **Starting...**',
            clickToJoin: 'Click "Join Game" to participate!',
            seconds: 'seconds'
        };
    } else {
        return {
            rouletteTitle: '๐ฏ ูุนุจุฉ ุงูุฑูููุช',
            rouletteDescription: `@here\n\n๐ฎ **ุชู ุจุฏุก ูุนุจุฉ ุฑูููุช ุฌุฏูุฏุฉ!**\n\n๐ **ุงูููุงุนุฏ:**\nโข ุงูุญุฏ ุงูุฃุฏูู: 4 ูุงุนุจูู\nโข ูู ุฌููุฉ ูุฎุชุงุฑ ูุงุนุจ ุนุดูุงุฆู ุดุฎุต ูุทุฑุฏู\nโข ุขุฎุฑ ูุงุนุจ ูุชุจูู ูู ุงููุงุฆุฒ\n\nโฐ **ููุช ุงูุงูุถูุงู: 40 ุซุงููุฉ**`,
            diceTitle: '๐ฒ ูุนุจุฉ ุงููุฑุฏ ุงูุฌูุงุนูุฉ',
            diceDescription: `@here\n\n๐ฎ **ุชู ุจุฏุก ูุนุจุฉ ูุฑุฏ ุฌูุงุนูุฉ!**\n\n๐ **ุงูููุงุนุฏ:**\nโข ุงูุญุฏ ุงูุฃุฏูู: 4 ูุงุนุจูู\nโข ูุชู ุชูุณูู ุงููุงุนุจูู ููุฑูููู\nโข 3 ุฌููุงุช ููููุงูุณุฉ\nโข ูู ูุงุนุจ ูุญุตู ุนูู ูุฑุฏ ุนุดูุงุฆู\n\nโฐ **ููุช ุงูุงูุถูุงู: 30 ุซุงููุฉ**`,
            joinGame: 'ุฏุฎูู ุงููุนุจุฉ',
            leaveGame: 'ุฎุฑูุฌ ูู ุงููุนุจุฉ',
            playersCount: 'ุงููุงุนุจูู',
            timeLeft: 'ุงูููุช ุงููุชุจูู',
            status: 'ุงูุญุงูุฉ',
            waitingPlayers: 'ุงูุชุธุงุฑ ุงููุงุนุจูู',
            noPlayersYet: 'ูุง ููุฌุฏ ูุงุนุจูู ุจุนุฏ',
            gameCancelled: 'โ ุชู ุฅูุบุงุก ุงููุนุจุฉ',
            notEnoughPlayers: 'ูู ููุถู ุนุฏุฏ ูุงูู ูู ุงููุงุนุจูู ({current}/4)\nุงูุญุฏ ุงูุฃุฏูู: 4 ูุงุนุจูู',
            gameStarted: '๐ฒ **ุจุฏุฃุช ูุนุจุฉ ุงููุฑุฏ!**',
            round: 'ุงูุฌููุฉ',
            team1: '๐ด **ุงููุฑูู ุงูุฃูู:**',
            team2: '๐ต **ุงููุฑูู ุงูุซุงูู:**',
            starting: '๐ **ุฌุงุฑู ุงูุจุฏุก...**',
            clickToJoin: 'ุงุถุบุท ุนูู "ุฏุฎูู ุงููุนุจุฉ" ูููุดุงุฑูุฉ!',
            seconds: 'ุซุงููุฉ'
        };
    }
}

module.exports = {
    languageCommands,
    handleLanguageCommand,
    getServerLanguage,
    setServerLanguage,
    translate,
    getGameTexts
};
